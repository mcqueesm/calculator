{"version":3,"sources":["index.js"],"names":["Keys","props","_this","Object","_Users_RoseSamuel_Desktop_GitPages_Calculator_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_Users_RoseSamuel_Desktop_GitPages_Calculator_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_RoseSamuel_Desktop_GitPages_Calculator_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","handleClick","bind","_Users_RoseSamuel_Desktop_GitPages_Calculator_calculator_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","prevDis","display","length","type","id","cumDisplay","includes","setMainDisplay","symbol","setCumDisplay","isNaN","addToCumDisplay","addToMainDisplay","clearBothDisplay","concat","_Users_RoseSamuel_Desktop_GitPages_Calculator_calculator_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","tempDisplay","slice","pop","tempCum","calculate","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","className","onClick","React","Component","BtnInfo","Calculator","_this2","state","clearMainDisplay","elem","setState","_len","arguments","Array","_key","arr","join","split","map","x","Number","parseFloat","value","Math","floor","evalExp","_this3","Btns","key","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.25042f48.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\n\n//Component for All Calculator Buttons\n//Key entries affect main display and cumulative display of Calculator component.\nclass Keys extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  //Handles clicks for all buttons\n  handleClick() {\n    //prevDis is the last element of the state.display array\n    let prevDis = this.props.display[this.props.display.length-1];\n    //Handling numbers:\n    if(this.props.type === 'num'){\n      //Do nothing if user enters initial zeros\n      if (this.props.display.length===0 && this.props.id==='zero'){}\n      //If expression was previously evaluated, reset displays with current value\n      else if (this.props.cumDisplay.includes('=')){\n        this.props.setMainDisplay([this.props.symbol]);\n        this.props.setCumDisplay([this.props.symbol]);\n      }\n      //If last entry was an operator, replace operator with current number (main display)\n      else if (isNaN(prevDis) && prevDis !=='.'){\n        this.props.setMainDisplay([this.props.symbol]);\n        this.props.addToCumDisplay(this.props.symbol);\n      }\n      //Otherwise, add number to display\n      else {\n        this.props.addToMainDisplay(this.props.symbol);\n        this.props.addToCumDisplay(this.props.symbol);\n      }\n\n    }\n    //Handling decimal key:\n    if(this.props.type === 'decimal'){\n      //If main display already contains decimal, do nothing.\n      if(this.props.display.includes('.')){}\n      //If prev. entry was operator, reset main display to '0.'\n      else if (isNaN(prevDis)){\n        this.props.setMainDisplay([0, '.']);\n        this.props.addToCumDisplay(0, '.');\n      }\n      //Reset to '0.' if expression was previously evaluated.\n      else if (this.props.cumDisplay.includes('=')){\n        this.props.setMainDisplay([0, '.']);\n        this.props.setCumDisplay([0, '.']);\n      }\n      //If initial keypress is '.', set/add '0.'\n      else if (this.props.display.length===0){\n        this.props.setMainDisplay([0, '.']);\n        this.props.addToCumDisplay(0, '.');\n      }\n      //Otherwise add decimal to displays.\n      else {\n        this.props.addToMainDisplay(this.props.symbol);\n        this.props.addToCumDisplay(this.props.symbol);\n      }\n    }\n    //Handle AC button by clearing both displays.\n    if(this.props.type === 'clear'){\n      this.props.clearBothDisplay();\n    }\n    //Handle operations:\n    if(this.props.type==='op'){\n      //Do nothing if initial keypress is an operation.\n      if (this.props.display.length===0) {\n\n      }\n      //If expression was previously evaluated, perform operation on the result\n      else if(this.props.cumDisplay.includes('=')){\n        this.props.setCumDisplay([...this.props.display, this.props.symbol]);\n        this.props.setMainDisplay([this.props.symbol]);\n      }\n      //If previous entry not a number, replace it with current operator.\n      else if (isNaN(prevDis)){\n        let tempDisplay = this.props.display.slice();\n        tempDisplay.pop();\n        this.props.setMainDisplay(tempDisplay.concat(this.props.symbol));\n        let tempCum = this.props.cumDisplay.slice();\n        tempCum.pop();\n\n        this.props.setCumDisplay(tempCum.concat(this.props.symbol));\n      }\n      //Otherwise, add operation to displays\n      else{\n        this.props.addToCumDisplay(this.props.symbol);\n        this.props.setMainDisplay([this.props.symbol]);\n      }\n    }\n    //Handle equals:\n    if(this.props.type==='equals'){\n      //Do nothing if 'equals' is initial press.\n      if (this.props.display.length===0){}\n      //Otherwise evaluate expression in cum. display.\n      else if (!this.props.cumDisplay.includes('=')){\n        this.props.calculate();\n      }\n    }\n\n  }\n  render() {\n\n    return (\n      <div className=\"calc-keys\" onClick={this.handleClick}\n      id={this.props.id} >{this.props.symbol}\n      </div>\n    );\n  }\n}\n\n\n\n//Array of all calc. button properties.\nconst BtnInfo = [\n  {id: 'add',\n  symbol: '+',\n  type: 'op'},\n  {id: 'subtract',\n  symbol: '-',\n  type: 'op'},\n  {id: 'multiply',\n  symbol: '*',\n  type: 'op'},\n  {id: 'divide',\n  symbol: '/',\n  type: 'op'},\n  {id: 'one',\n  symbol: 1,\n  type: 'num'},\n  {id: 'two',\n  symbol: 2,\n  type: 'num'},\n  {id: 'three',\n  symbol: 3,\n  type: 'num'},\n  {id: 'four',\n  symbol: 4,\n  type: 'num'},\n  {id: 'five',\n  symbol: 5,\n  type: 'num'},\n  {id: 'six',\n  symbol: 6,\n  type: 'num'},\n  {id: 'seven',\n  symbol: 7,\n  type: 'num'},\n  {id: 'eight',\n  symbol: 8,\n  type: 'num'},\n  {id: 'nine',\n  symbol: 9,\n  type: 'num'},\n  {id: 'zero',\n  symbol: 0,\n  type: 'num'},\n  {id: 'clear',\n  symbol: 'AC',\n  type: 'clear'},\n  {id: 'decimal',\n  symbol: '.',\n  type: 'decimal'},\n  {id: 'equals',\n  symbol: '=',\n  type: 'equals'}\n];\n\n\n//Component containing buttons and displays\nclass Calculator extends React.Component {\n  constructor(props){\n    super(props);\n    /******\n    *display: Array of elements to be displayed in main display of calc.\n    *cumDisplay\n    */\n    this.state = {\n      display: [],\n      cumDisplay: [],\n    };\n    this.addToMainDisplay = this.addToMainDisplay.bind(this);\n    this.clearBothDisplay = this.clearBothDisplay.bind(this);\n    this.clearMainDisplay = this.clearMainDisplay.bind(this);\n    this.addToCumDisplay = this.addToCumDisplay.bind(this);\n    this.calculate = this.calculate.bind(this);\n    this.setMainDisplay = this.setMainDisplay.bind(this);\n    this.setCumDisplay = this.setCumDisplay.bind(this);\n  }\n  //Adds elem to state.display\n  addToMainDisplay(elem){\n    this.setState({display: [...this.state.display, elem]});\n  }\n  //Sets state.display to 'display'\n  setMainDisplay(display){\n    this.setState({display: display});\n  }\n  //Sets state.cumDisplay to 'display'\n  setCumDisplay(display){\n    this.setState({cumDisplay: display});\n  }\n  //Set displays to empty arrays\n  clearBothDisplay () {\n    this.setState({display: [], cumDisplay: []});\n  }\n  //Set only state.display to empty array\n  clearMainDisplay () {\n    this.setState({display: []});\n\n  }\n  //Adds elements to cum. display\n  addToCumDisplay (...elem) {\n    this.setState({cumDisplay: [...this.state.cumDisplay,...elem]});\n  }\n\n  calculate() {\n    //If previous entry was not a number:\n    if (isNaN(this.state.cumDisplay[this.state.cumDisplay.length-1])){\n      //Copy cumDisplay and remove non-number\n      let tempCum = this.state.cumDisplay.slice();\n      tempCum.pop();\n      //Create str from tempCum, and split it into operators and numbers\n      let expStr = tempCum.join('');\n      let expArr = expStr.split(/(\\+|-|\\*|\\/|=)/);\n      //Map string containing numbers into floats.\n      let arr = expArr.map(x => {\n        if (!isNaN(Number.parseFloat(x))){\n          return Number.parseFloat(x);\n        }\n        else {\n          return x;\n        }\n      });\n      //Use evalExp function to calculate expression and round to 4 decimal pts.\n      let value = Math.floor(evalExp(arr)*10000)/10000;\n      //Set display with the value\n      this.setState({display: [value], cumDisplay: [...tempCum, '=', value]});\n    }\n    //If last entry was a number:\n    else  {\n      //Copy cumDisplay, turn it into string, and split it into array\n      //at junctions between operators and numbers.\n      let exp = this.state.cumDisplay.slice();\n      let expStr = exp.join('');\n      let expArr = expStr.split(/(\\+|-|\\*|\\/|=)/);\n      //Map strings containing numbers into floats.\n      let arr = expArr.map(x => {\n        if (!isNaN(Number.parseFloat(x))){\n          return Number.parseFloat(x);\n        }\n        else {\n          return x;\n        }\n      });\n    //Evaluate expression with evalExp and round to 4 decimal pts.\n    let value = Math.floor(evalExp(arr)*10000)/10000;\n    //Update state\n    this.setState({display: [value], cumDisplay: [...this.state.cumDisplay, '=', value]});\n   }\n  }\n  render(){\n    //Add properties to buttons\n    const Btns = BtnInfo.map(x => {\n      return <Keys key={x.id+1} id={x.id} symbol={x.symbol}\n      type={x.type}\n      calculate={this.calculate}\n      addToMainDisplay={this.addToMainDisplay}\n      clearBothDisplay={this.clearBothDisplay}\n      clearMainDisplay={this.clearMainDisplay}\n      addToCumDisplay={this.addToCumDisplay}\n      setMainDisplay={this.setMainDisplay}\n      display={this.state.display}\n      cumDisplay={this.state.cumDisplay}\n      setCumDisplay={this.setCumDisplay}/>;\n    });\n\n    return (\n      <div id='container'>\n      <h1>Calculator</h1>\n      <div id=\"button-container\">\n        <div id=\"display-container\">\n        <div id=\"cum-display\">\n          {this.state.cumDisplay.join('')}\n        </div>\n        <div id=\"display\">{this.state.display.length===0 ? 0 : this.state.display.join('')}</div>\n        </div>\n        {Btns}\n\n      </div>\n      <p>Made with React.js</p>\n      </div>\n    );\n\n\n  }\n\n}\n//This function takes array (arr) of operators (/,*,+,-) and numbers\n//representing an expression and evaluates it.\n//Example 33+4.5 is [33, '+', 4.5]\nfunction evalExp(arr) {\n  //Base case:  When arr is length 1, return the value it contains.\n  if(arr.length === 1){\n    return Number.parseFloat(arr.pop());\n  }\n  //Calculate mult. and div. first.\n  if (arr.includes('*') || arr.includes('/')){\n    for (let i = 0; i < arr.length; i++){\n      //Replace '*' and number on either side with their product or\n      //replace '/' and numbers on either side with their quotient.\n      //Recursively pass new array.\n      if(arr[i] === '*'){\n        return evalExp(arr.slice(0, i-1).concat(arr[i-1]*arr[i+1]).concat(arr.slice(i+2, arr.length)));\n      }\n      else if (arr[i] === '/'){\n        return evalExp(arr.slice(0, i-1).concat(arr[i-1]/arr[i+1]).concat(arr.slice(i+2, arr.length)));\n      }\n    }\n  }\n  //Next evaluate addition and subtraction in same manner as above.\n  else if (arr.includes('+') || arr.includes('-')){\n    for (let i = 0; i < arr.length; i++){\n      if(arr[i] === '+'){\n        return evalExp(arr.slice(0, i-1).concat(arr[i-1]+arr[i+1]).concat(arr.slice(i+2, arr.length)));\n      }\n      else if (arr[i] === '-'){\n        return evalExp(arr.slice(0, i-1).concat(arr[i-1]-arr[i+1]).concat(arr.slice(i+2, arr.length)));\n      }\n    }\n\n  }\n\n\n}\n\n\nReactDOM.render(<Calculator />, document.getElementById('root'));\n"],"sourceRoot":""}